# Задача 1: 

# На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. 
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были 
# повернуты вверх одной и той же стороной. 
# Выведите минимальное количество монет, которые нужно перевернуть

all = int(input()) # все монеты
r = int(input()) # монеты решкой
h = int(input()) # монеты гербом

def min_flips(all, r, h):
    # Находим минимальное количество монеток, которые нужно перевернуть
    return min(r, h)

print("Минимальное количество монеток, которые нужно перевернуть:", min_flips(all, r, h))

# Или так:

# def min_flips(all, r, h):
#     # Находим минимальное количество монеток, которые нужно перевернуть
#     if r <= h:
#       return r
#     else:
#       return h

# *********************************************************************************

# Задача 2:

# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. 
# Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y (X,Y≤1000), 
# а Катя должна их отгадать. Для этого Петя делает две подсказки. 
# Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.

s = int(input()) # Сумма чисел
p = int(input()) # Произведение чисел

def find_number(s, p):
    for x in range(1, s + 1):
        y = s - x
        if x * y == p:
            return x, y
    return "Не удалось найти решение"

print(find_number(s, p))

# Задача 3: 

# Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.

n = int(input())

def pow(n):
    pow = 1
    while pow <= n:
        print(pow)
        pow *= 2
      
pow(n)

# Или через цикл for:

# def pow(n):
#   pow = 1
#   for i in range(1, n):
#     if pow <= n:
#       print(pow)
#       pow *= 2

